// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

model User {
  id          String        @id @default(uuid()) @db.Char(36)
  email       String        @unique
  name        String
  password    String
  role        Role
  createdAt   DateTime      @default(now())
  isDeleted   Boolean       @default(false)
  deletedAt   DateTime?
  Job         Job[]
  Application Application[]
}

model Job {
  id          String    @id @default(uuid()) @db.Char(36)
  title       String
  description String?
  skills      String
  postDate    DateTime  @default(now())
  isDeleted   Boolean   @default(false)
  deletedAt   DateTime?
  updatedAt   DateTime?

  recruiter   User?   @relation(fields: [recruiterId], references: [id])
  recruiterId String?
  application Application[]
}

//application
model Application {
  id          String    @id @default(uuid()) @db.Char(36)
  resume      String
  appliedAt   DateTime  @default(now())
  isDeleted   Boolean   @default(false)
  deletedAt   DateTime?
  updatedAt   DateTime?
  applicant   User      @relation(fields: [applicantId], references: [id])
  applicantId String
  job Job @relation(fields: [jobId], references: [id])
  jobId String
}

//role based users
enum Role {
  RECRUITER
  APPLICANT
}
